[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 C. Huang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cynthia Huang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Huang C (2023). xmap: xmap: data-structure extending crosswalks. R package version 0.0.0.9018.","code":"@Manual{,   title = {xmap: xmap: A data-structure for extending crosswalks},   author = {Cynthia Huang},   year = {2023},   note = {R package version 0.0.0.9018}, }"},{"path":"/reference/abort.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation messages for xmap or candidate links — abort_missing_cols","title":"Validation messages for xmap or candidate links — abort_missing_cols","text":"Checks issues data.frame like objects containing validated xmap candidate links.","code":""},{"path":"/reference/abort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation messages for xmap or candidate links — abort_missing_cols","text":"","code":"abort_missing_cols(df, cols)  abort_any_na(df)  abort_weights_col_type(df, col_weights)  abort_dup_pairs(df, col_from, col_to)  abort_bad_weights(df, col_from, col_weights)  abort_col_order(df, col_from, col_to, col_weights)  abort_from_set(df, col_from, from_set)"},{"path":"/reference/abort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation messages for xmap or candidate links — abort_missing_cols","text":"df data.frame-like object containing links col_from, col_to, col_weights character vector values naming columns df","code":""},{"path":"/reference/abort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation messages for xmap or candidate links — abort_missing_cols","text":"error validation condition fails, invisibly returns df otherwise.","code":""},{"path":"/reference/abort.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Validation messages for xmap or candidate links — abort_missing_cols","text":"abort_missing_cols(): Abort named columns found df abort_any_na(): Abort xmap_df missing values abort_weights_col_type(): Abort xmap_df wrong column types abort_dup_pairs(): Abort duplicate source-target pairs found abort_bad_weights(): Abort invalid mapping weights found abort_col_order(): Abort xmap_df columns order abort_from_set(): Abort from_set attribute match xmap_df values","code":""},{"path":"/reference/as_xmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if object is a crossmap — is_xmap","title":"Test if object is a crossmap — is_xmap","text":"function returns TRUE crossmaps xmap subclasses thereof (xmap_df), FALSE objects, including regular data.frames tibbles.","code":""},{"path":"/reference/as_xmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if object is a crossmap — is_xmap","text":"","code":"is_xmap(x)  is_xmap_df(x)"},{"path":"/reference/as_xmap_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce objects to xmap_df — as_xmap_df","title":"Coerce objects to xmap_df — as_xmap_df","text":"Validates creates valid crossmap xmap_df object.","code":""},{"path":"/reference/as_xmap_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce objects to xmap_df — as_xmap_df","text":"","code":"as_xmap_df(x, from, to, weights, subclass = c(\"xmap_df\"), ...)  # S3 method for data.frame as_xmap_df(x, from, to, weights, subclass = \"xmap_df\", .drop_extra = TRUE)"},{"path":"/reference/as_xmap_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce objects to xmap_df — as_xmap_df","text":"x as_xmap_df(): object coerce is_xmap_df(): object test. , Columns x specifying source target nodes weights Column x specifying weight applied data passed along directed link source target node subclass xmap subclass return. Defaults xmap_df data.frame tibble .drop_extra Drop columns , weights. Defaults TRUE","code":""},{"path":"/reference/as_xmap_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce objects to xmap_df — as_xmap_df","text":"validated xmap object.","code":""},{"path":"/reference/as_xmap_df.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Coerce objects to xmap_df — as_xmap_df","text":"as_xmap_df(data.frame): Coerce data.frame xmap","code":""},{"path":"/reference/as_xmap_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce objects to xmap_df — as_xmap_df","text":"","code":"# For a well formed crossmap: links <- data.frame(   a = \"AUS\",   b = c(\"VIC\", \"NSW\", \"WA\", \"OTHER\"),   w = c(0.1, 0.15, 0.25, 0.5) ) as_xmap_df(links, from = a, to = b, weights = w) #> xmap_df: #> split  #> (a -> b) BY w #>     a     b    w #> 1 AUS   VIC 0.10 #> 2 AUS   NSW 0.15 #> 3 AUS    WA 0.25 #> 4 AUS OTHER 0.50  # extra columns are dropped, links$extra <- c(2, 4, 5, 6) as_xmap_df(links, from = a, to = b, weights = w) #> Dropped additional columns in `links` #> xmap_df: #> split  #> (a -> b) BY w #>     a     b    w #> 1 AUS   VIC 0.10 #> 2 AUS   NSW 0.15 #> 3 AUS    WA 0.25 #> 4 AUS OTHER 0.50"},{"path":"/reference/has-links.html","id":null,"dir":"Reference","previous_headings":"","what":"Boolean flags for properties of candidate and validated xmap links — has-links","title":"Boolean flags for properties of candidate and validated xmap links — has-links","text":"has_*() functions check properties xmap links /candidate links. functions accepts equal length vector inputs support multiple link formats, check inputs xmap.","code":""},{"path":"/reference/has-links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boolean flags for properties of candidate and validated xmap links — has-links","text":"","code":"has_no_dup_pairs(x_from, x_to)  has_complete_weights(x_from, x_weights, tol = .Machine$double.eps^0.5)  has_1to1(x_weights)  has_1toM(x_weights)  has_1fromM(x_to)  has_xmap_props(x_from, x_to, x_weights)"},{"path":"/reference/has-links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boolean flags for properties of candidate and validated xmap links — has-links","text":"x_from, x_to, x_weights equal length vectors containing source-target node pairs tol Tolerance comparison. Passed tolerance arg base::.equal().","code":""},{"path":"/reference/has-links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boolean flags for properties of candidate and validated xmap links — has-links","text":"TRUE FALSE","code":""},{"path":"/reference/has-links.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Boolean flags for properties of candidate and validated xmap links — has-links","text":"has_no_dup_pairs(): Returns TRUE xmap duplicate pairs source-target nodes (irrespective weights) has_complete_weights(): Returns TRUE weights given label sum one (approximately) has_1to1(): Return TRUE xmap recodes labels has_1toM(): Return TRUE xmap splitting links has_1fromM(): Return TRUE xmap collapsing links has_xmap_props(): Returns TRUE links duplicate pairs complete weights","code":""},{"path":"/reference/links_from_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make candidate links from list — links_from_list","title":"Make candidate links from list — links_from_list","text":"Convert named list one--one many--one relations table candidate links validation coercion crossmap \\(.e. via as_xmap_df()\\).","code":""},{"path":"/reference/links_from_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make candidate links from list — links_from_list","text":"","code":"links_from_list(x_list, col_from, col_to, col_weights)"},{"path":"/reference/links_from_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make candidate links from list — links_from_list","text":"x_list named list. item contains vector source nodes map #' target node named. col_from, col_to, col_weights character string names columns containing source nodes, target nodes numeric weights.","code":""},{"path":"/reference/links_from_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make candidate links from list — links_from_list","text":"tibble containing candidate links conversion xmap.","code":""},{"path":"/reference/links_from_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make candidate links from list — links_from_list","text":"","code":"tar_list <- list(AA = c(\"x3\", \"x4\", \"x6\"),                  BB = c(\"x1\", \"x5\"),                  CC = c(\"x2\")) links_from_list(tar_list, \"source\", \"target\", \"weights\") #> # A tibble: 6 × 3 #>   target source weights #>   <chr>  <chr>    <dbl> #> 1 AA     x3           1 #> 2 AA     x4           1 #> 3 AA     x6           1 #> 4 BB     x1           1 #> 5 BB     x5           1 #> 6 CC     x2           1"},{"path":"/reference/new_xmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Low Level Constructors for xmap subclasses — new_xmap","title":"Low Level Constructors for xmap subclasses — new_xmap","text":"Low Level Constructors xmap subclasses","code":""},{"path":"/reference/new_xmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low Level Constructors for xmap subclasses — new_xmap","text":"","code":"new_xmap_df(x, col_from, col_to, col_weights, from_set = NULL)"},{"path":"/reference/new_xmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low Level Constructors for xmap subclasses — new_xmap","text":"x data-frame object containing candidate links. col_from, col_to, col_weights character strings naming columns containing source nodes, target nodes numeric weights.","code":""},{"path":"/reference/new_xmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low Level Constructors for xmap subclasses — new_xmap","text":"xmap_df object. Note function unclasses tibbles. x additional subclasses xmap_df xmap","code":""},{"path":"/reference/new_xmap.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Low Level Constructors for xmap subclasses — new_xmap","text":"new_xmap_df(): Construct xmap_df data.frame checks argument types naively generates from_set missing","code":""},{"path":"/reference/op-null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Defaults for NULL values — op-null-default","title":"Defaults for NULL values — op-null-default","text":"Defaults NULL values","code":""},{"path":"/reference/op-null-default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defaults for NULL values — op-null-default","text":"","code":"x %||% y"},{"path":"/reference/print.xmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an xmap object — print.xmap","title":"Print an xmap object — print.xmap","text":"Print xmap object","code":""},{"path":"/reference/print.xmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an xmap object — print.xmap","text":"","code":"# S3 method for xmap_df print(x)"},{"path":"/reference/print.xmap.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Print an xmap object — print.xmap","text":"print(xmap_df): Print xmap_df","code":""},{"path":"/reference/validate_links_as_xmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if candidate links meet crossmap properties — validate_links_as_xmap","title":"Check if candidate links meet crossmap properties — validate_links_as_xmap","text":"Check candidate links meet crossmap properties","code":""},{"path":"/reference/validate_links_as_xmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if candidate links meet crossmap properties — validate_links_as_xmap","text":"","code":"validate_links_as_xmap(df, from, to, weights)"},{"path":"/reference/validate_links_as_xmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if candidate links meet crossmap properties — validate_links_as_xmap","text":"df data.frame like object containing candidate links , Columns x specifying source target nodes weights Column x specifying weight applied data passed along directed link source target node","code":""},{"path":"/reference/validate_xmap_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Validator for xmap_df objects — validate_xmap_df","title":"Validator for xmap_df objects — validate_xmap_df","text":"Validator xmap_df objects","code":""},{"path":"/reference/validate_xmap_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validator for xmap_df objects — validate_xmap_df","text":"","code":"validate_xmap_df(x)"},{"path":"/reference/xmap_drop_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop extra columns from xmap objects — xmap_drop_extra","title":"Drop extra columns from xmap objects — xmap_drop_extra","text":"Drop extra columns xmap objects","code":""},{"path":"/reference/xmap_drop_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop extra columns from xmap objects — xmap_drop_extra","text":"","code":"xmap_drop_extra(x)"},{"path":"/reference/xmap_reverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse xmap direction — xmap_reverse","title":"Reverse xmap direction — xmap_reverse","text":"Reverse xmap direction","code":""},{"path":"/reference/xmap_reverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse xmap direction — xmap_reverse","text":"","code":"xmap_reverse(x, weights_into)  # S3 method for xmap_df xmap_reverse(x, weights_into = \"r_weights\")"},{"path":"/reference/xmap_reverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse xmap direction — xmap_reverse","text":"x xmap object reversed weights_into string specifying name new existing column store reverse weights .","code":""},{"path":"/reference/xmap_reverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse xmap direction — xmap_reverse","text":"xmap object class x, throws error x reversible","code":""},{"path":"/reference/xmap_reverse.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Reverse xmap direction — xmap_reverse","text":"xmap_reverse(xmap_df): Reverse xmap_df","code":""},{"path":"/reference/xmap_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a unit weights xmap_df to a List — xmap_to_list","title":"Coerce a unit weights xmap_df to a List — xmap_to_list","text":"Coerce unit weights xmap_df List","code":""},{"path":"/reference/xmap_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a unit weights xmap_df to a List — xmap_to_list","text":"","code":"xmap_to_list(x)"},{"path":"/reference/xmap_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a unit weights xmap_df to a List — xmap_to_list","text":"x xmap unit weights","code":""},{"path":"/reference/xmap_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a unit weights xmap_df to a List — xmap_to_list","text":"named list. item contains vector source nodes map target node named.","code":""},{"path":"/reference/xmap_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce a unit weights xmap_df to a List — xmap_to_list","text":"","code":"tar_list <- list(AA = c(\"x3\", \"x4\", \"x6\"),                  BB = c(\"x1\", \"x5\"),                  CC = c(\"x2\")) xmap_c <- links_from_list(tar_list, \"source\", \"target\", \"weights\") |>            as_xmap_df(source, target, weights) xmap_to_list(xmap_c) #> $AA #> [1] \"x3\" \"x4\" \"x6\" #>  #> $BB #> [1] \"x1\" \"x5\" #>  #> $CC #> [1] \"x2\" #>"},{"path":"/reference/xmap_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract incidence matrix from xmap objects — xmap_to_matrix","title":"Extract incidence matrix from xmap objects — xmap_to_matrix","text":"Transforms xmap objects incidence matrix rows indexed values columns indexed values. Drops additional variables.","code":""},{"path":"/reference/xmap_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract incidence matrix from xmap objects — xmap_to_matrix","text":"","code":"xmap_to_matrix(x, sparse, ...)  # S3 method for xmap_df xmap_to_matrix(x, sparse = TRUE)"},{"path":"/reference/xmap_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract incidence matrix from xmap objects — xmap_to_matrix","text":"x xmap object sparse logical specifying result sparse matrix. Defaults TRUE. ... Unused","code":""},{"path":"/reference/xmap_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract incidence matrix from xmap objects — xmap_to_matrix","text":"matrix sparse matrix object","code":""},{"path":"/reference/xmap_to_matrix.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Extract incidence matrix from xmap objects — xmap_to_matrix","text":"xmap_to_matrix(xmap_df): Coerce xmap_df Matrix","code":""},{"path":"/reference/xmap_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract incidence matrix from xmap objects — xmap_to_matrix","text":"","code":"abc_xmap <- data.frame(  stringsAsFactors = FALSE,                  origin = c(\"a\",\"b\",\"c\",\"d\",\"e\",                           \"f\",\"g\",\"h\",\"i\",\"i\",\"j\",\"j\",\"j\"),                    dest = c(\"AA\",\"AA\",\"AA\",\"AA\",                           \"BB\",\"BB\",\"CC\",\"DD\",\"EE\",\"FF\",\"GG\",\"HH\",\"II\"),            link = c(1, 1, 1, 1, 1, 1, 1, 1, 0.5, 0.5, 0.3, 0.3, 0.4)  ) |> as_xmap_df(origin, dest, link) xmap_to_matrix(abc_xmap) #> 10 x 9 sparse Matrix of class \"dgCMatrix\" #>       dest #> origin AA BB CC DD  EE  FF  GG  HH  II #>      a  1  .  .  . .   .   .   .   .   #>      b  1  .  .  . .   .   .   .   .   #>      c  1  .  .  . .   .   .   .   .   #>      d  1  .  .  . .   .   .   .   .   #>      e  .  1  .  . .   .   .   .   .   #>      f  .  1  .  . .   .   .   .   .   #>      g  .  .  1  . .   .   .   .   .   #>      h  .  .  .  1 .   .   .   .   .   #>      i  .  .  .  . 0.5 0.5 .   .   .   #>      j  .  .  .  . .   .   0.3 0.3 0.4"}]
